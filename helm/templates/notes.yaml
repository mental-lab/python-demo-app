apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.notes.name }}
spec:
  replicas: {{ .Values.notes.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.notes.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.notes.name }}
    spec:
      containers:
      - name: {{ .Values.notes.name }}
        image: {{ .Values.image }}
        env:
          - name: DB_ROOT_PWD
            value: "{{ .Values.notes.dbrootpwd }}"
          - name: NOTES_DB_BACKEND
            value: "{{ .Values.notes.dbBackend }}"
          - name: NOTES_DB_DATABASE
            value: "{{ .Values.notes.dbName }}"
          - name: NOTES_ING_PATH
            value: "{{ .Values.notes.path }}"
        ports:
        - containerPort: {{ .Values.notes.targetPort }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.notes.name }}
spec:
  ports:
  - port: {{ .Values.notes.port }}
    targetPort: {{ .Values.notes.targetPort }}
    protocol: TCP
    name: http
  selector:
    app: {{ .Values.notes.name }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.notes.name }}
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/cors-allow-headers: "X-Forwarded-For, X-Real-IP"
    nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS, DELETE"
spec:
  rules:
  - http:
      paths:
      - path: /{{ .Values.notes.path }}(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: {{ .Values.notes.name }}
            port:
              number: {{ .Values.notes.port }}
